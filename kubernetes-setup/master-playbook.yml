---
- hosts: all
  become: true
  tasks:
#Install Docker and its dependent components i.e docker-ce - docker-ce-cli - containerd.io and adding a user named “vagrant” to the “docker” group.
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker
#Kubelet will not start if the system has swap enabled, so we are disabling swap using the below code      
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0
 
#Installing kubelet, kubeadm and kubectl using the below code.

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip  }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
#Initialize the Kubernetes cluster with kubeadm using the below code (applicable only on master node).

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address={{ node_ip }} --apiserver-cert-extra-sans={{ node_ip }} --node-name k8s-master --pod-network-cidr=172.168.0.0/16

#Setup the kube config file for the vagrant user to access the Kubernetes cluster.
  - name: Create target directory
    file: path=/home/vagrant/.kube state=directory mode=0755

  - name: Setup kubeconfig for vagrant user
    become: true
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      remote_src: yes

  - name: Copy the calico network deployment
    get_url:
      url: https://docs.projectcalico.org/v3.9/manifests/calico.yaml
      dest: /tmp/calico.yml
      mode: 0755

  - name: Install calico pod network
    become: false
    command: kubectl create -f /tmp/calico.yml

#Generate kube join command for joining the node to the Kubernetes cluster and store the command in the file named join-command
  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Remove old join command file before creating once again
    file:
      path: /vagrant/join-command
      state: absent
      
  - name: Copy join command to local file
    lineinfile:
      path: /vagrant/join-command
      state: present
      create: yes
      line: "{{ join_command.stdout_lines[0] }}"
      mode: 0775
      owner: vagrant
      group: vagrant
    

  - name: Keeping a local copy for testing/backup
    become: true
    copy:
      content: "{{ join_command.stdout_lines[0] }}"
      dest: /tmp/join-command
      mode: 0775
      owner: vagrant
      group: vagrant

#Setup a handler for checking Docker daemon using the below code.
  handlers:
    - name: docker status
      service: name=docker state=started